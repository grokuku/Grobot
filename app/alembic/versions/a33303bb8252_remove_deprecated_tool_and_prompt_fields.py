"""Remove deprecated tool and prompt fields

Revision ID: a33303bb8252
Revises: 5d48a860aa10
Create Date: 2025-08-15 17:11:19.462086

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'a33303bb8252'
down_revision: Union[str, Sequence[str], None] = '5d48a860aa10'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('bots', 'tool_prompts_overrides')
    op.drop_column('bots', 'context_header_override_prompt')
    op.drop_column('bots', 'enabled_tools')
    op.drop_column('global_settings', 'tool_prompts_default')
    op.drop_column('global_settings', 'tools_system_prompt_example')
    op.drop_column('global_settings', 'tools_system_prompt_header')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('global_settings', sa.Column('tools_system_prompt_header', sa.TEXT(), server_default=sa.text("'Default Header - Please Update'::text"), autoincrement=False, nullable=False))
    op.add_column('global_settings', sa.Column('tools_system_prompt_example', sa.TEXT(), server_default=sa.text("'Default Example - Please Update'::text"), autoincrement=False, nullable=False))
    op.add_column('global_settings', sa.Column('tool_prompts_default', postgresql.JSON(astext_type=sa.Text()), server_default=sa.text('\'{"analyze_file": "This tool analyzes the content of a text-based file and generates a summary. It takes one mandatory argument: \'\'uuid\'\', which is the unique identifier of the file to analyze. The summary is then stored in the file\'\'s metadata. Use this tool when a user explicitly asks to analyze, summarize, or describe a specific file.", "search_files": "This tool allows you to search for files stored in the system. You can search by filename, file_family (e.g., \'\'image\'\', \'\'text\'\'), or owner_id (a Discord user ID). All parameters are optional. Use it when a user asks to find, list, or check for a file.", "get_current_time": "This tool allows you to know the current date and time. You do not need to provide any arguments to it. Call this tool if the user asks you for the time, the date, or information related to the present moment."}\'::jsonb'), autoincrement=False, nullable=False))
    op.add_column('bots', sa.Column('enabled_tools', postgresql.JSON(astext_type=sa.Text()), server_default=sa.text("'[]'::json"), autoincrement=False, nullable=False))
    op.add_column('bots', sa.Column('context_header_override_prompt', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('bots', sa.Column('tool_prompts_overrides', postgresql.JSON(astext_type=sa.Text()), server_default=sa.text("'{}'::json"), autoincrement=False, nullable=False))
    # ### end Alembic commands ###
